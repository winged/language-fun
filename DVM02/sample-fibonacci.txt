# This is a fibonacci implementation for Dave's first virtual machine (DVM01).

# First, initialize a nop slide for "registers". Note that
# the first one is required, as address 0 is used by the
# VM to store the program counter.

	START # 0: contains program counter
	NOP   # 1: first accumulator
	NOP   # 2: second accumulator
	NOP   # 3: helper
	NOP   # 4: loop counter
	NOP   # 5: stores loop jump address

# Initialisation: Address 4 is used as a countdown loop counter.
# Set it to a higher number to get more fibonacci numbers :)

	SET 4 30

# Initialize accumulators 1 and 2

	SET 1 1
	SET 2 1

# Be clever: store the program counter to address 5 as a loop "marker".
# This way, we don't have to worry too much about changing the program -
# the marker will adjust accordingly.

	SET 5 @0

# The loop begins here.

	SET 3 @1  # Use the helper "register", put the value of accumulator 1 in it
	ADD 3 @2  # Add value of accumulator 2 to the helper
	WRITEI @1 # Output the value in accumulator 1
	WRITEC 10 # Newline - we don't have explicit text support
	SET 1 @2  # Add content of accumulator 2 to accumulator 1
	SET 2 @3  # Set new sum of both accumulators in accumulator 2.

# Decrease iteration counter.

	SUB 4 1

# Jump to beginning of the loop, unless the counter is zero.
# This uses the clever "marker" from further up to know where
# to jump.

	JNZ @5 @4

# If the counter was zero, the jump didn't happen, and the program
# must end.

	END
