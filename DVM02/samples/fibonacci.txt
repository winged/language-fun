# This is a fibonacci implementation for Dave's first virtual machine (DVM01).

# First, initialize a nop slide for "registers". Note that
# the first one is required, as address 0 is used by the
# VM to store the program counter.

pc:        START # 0: contains program counter
acc1:      NOP   # 1: first accumulator
acc2:      NOP   # 2: second accumulator
temp:      NOP   # 3: helper
loopcount: NOP   # 4: loop counter

# Initialisation: Address 4 is used as a countdown loop counter.
# Set it to a higher number to get more fibonacci numbers :)

    SET loopcount 30

# Initialize accumulators 1 and 2

    SET acc1 1
    SET acc2 1

# The loop begins here.

loop:
    SET temp @acc1  # Use the helper "register", put the value of accumulator 1 in it
    ADD temp @acc2  # Add value of accumulator 2 to the helper
    WRITEI @acc1    # Output the value in accumulator 1
    WRITEC 10       # Newline - we don't have explicit text support
    SET acc1 @acc2  # Add content of accumulator 2 to accumulator 1
    SET acc2 @temp  # Set new sum of both accumulators in accumulator 2.

# Decrease iteration counter.

    SUB loopcount 1

# Jump to beginning of the loop, unless the counter is zero.
# This uses the clever "marker" from further up to know where
# to jump.

    JNZ loop @loopcount

# If the counter was zero, the jump didn't happen, and the program
# must end.

    END
